generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  login     String @unique
  password  String
  version   Int    @default(autoincrement())
  createdAt BigInt
  updatedAt BigInt
}

model Album {
  id        String           @id @default(uuid())
  name      String
  year      Int
  artistId  String?
  artist    Artist?          @relation(fields: [artistId], references: [id])
  tracks    Track[]
  favorites FavoriteAlbums[]
}

model Artist {
  id        String            @id @default(uuid())
  name      String
  grammy    Boolean           @default(false)
  albums    Album[]
  tracks    Track[]
  favorites FavoriteArtists[]
}

model Track {
  id        String           @id @default(uuid())
  name      String
  artistId  String?
  artist    Artist?          @relation(fields: [artistId], references: [id])
  albumId   String?
  album     Album?           @relation(fields: [albumId], references: [id])
  duration  Int
  favorites FavoriteTracks[]
}

model FavoriteArtists {
  id       String @id @default(uuid())
  artistId String @unique
  artist   Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
}

model FavoriteAlbums {
  id      String @id @default(uuid())
  albumId String @unique
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
}

model FavoriteTracks {
  id      String @id @default(uuid())
  trackId String @unique
  track   Track  @relation(fields: [trackId], references: [id], onDelete: Cascade)
}
